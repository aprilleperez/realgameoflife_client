{"version":3,"sources":["components/Button/index.js","utils/API.js","components/Modal/index.js","components/Nav/index.js","components/Grid/index.js","components/InputField/index.js","components/LandingPage/index.js","components/Lobby/index.js","components/Responses/index.js","components/Outcomes/index.js","components/Game/index.js","components/PrimaryLayout/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","react_default","a","createElement","className","to","value","onClick","text","API","getGames","q","axios","get","params","registerUser","newUser","post","logInUser","user","logOutUser","NewModal","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","target","name","setState","defineProperty","handleFormSubmit","preventDefault","state","firstName","lastName","password","orgName","saveUser","passsword","catch","err","console","log","_this$state","email","then","res","history","push","alert","handleClose","localStorage","clear","_this$state2","loggedUser","setItem","getItem","status","loggedIn","data","LoggedOutUser","response","handleShow","bind","assertThisInitialized","show","login","Fragment","es_Button","variant","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","placeholder","Accordion","Card","Toggle","as","eventKey","Collapse","Row","Col","Footer","data-dismisss","React","Component","Nav","userName","open","width","window","innerWidth","updateWidth","newState","toggleNav","addEventListener","removeEventListener","react_router_dom","data-toggle","data-target","aria-controls","aria-expanded","aria-label","concat","id","components_Modal","nextProps","prevState","Container","_ref","fluid","children","_ref2","_ref3","size","split","map","join","InputField","handleChange","handleSubmit","updateState","gameCode","Grid_Row","Grid_Col","Form_default","components_Button","withRouter","codeGen","animals","adjectives","rando","Math","floor","random","code","length","components_Nav","href","components_InputField","Lobby","host","players","getDefaultGame","_callee","results","regenerator_default","wrap","_context","prev","next","sent","gameObj","stop","gameLaunchHandler","_this2","socket","on","asyncToGenerator","mark","_callee2","_context2","emit","count","topMessage","playerCountMessage","playerIcons","s","i","src","key","alt","jumbo","buttonType","react_router","Responses","choiceMade","choice","undefined","timer","time","tMinus","setInterval","clearInterval","madeChoice","avatar","question","traitList","traits","tName1","trait1","tName2","trait2","score1","score2","num","choiceCB","document","getElementById","setAttribute","_this3","ansArr","answers","forEach","elem","Outcomes","qNum","outcome","questions","responses","outcomes","amount","statsCB","trait","Game","gameState","currentQuestion","allowTimer","startingTraits","currentStats","countdown","nextGameState","updateStats","stats","rand","avatars","Q","components_Responses","components_Outcomes","PrimaryLayout","setGame","game","path","render","components_Game","components_Lobby","exact","components_LandingPage","io","App","vals","basename","process","components_PrimaryLayout","Boolean","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6d626e39.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.css\";\n\n\nfunction Button(props) {\n  return (\n    <div className=\"appBtnCtn\">\n      <button className=\"appButton\" to={props.to} value={props.value} onClick={props.onClick}>{props.text}</button>\n    </div>\n  )\n}\n\nexport default Button;\n\n\n\n// let className = \"button \" + props.buttonType;\n// className={className}","//import axios\n//====================\nimport axios from \"axios\";\n\nexport default {\n    getGames: function(q) {\n        return axios.get('https://real-life-api.herokuapp.com/api/games/ + INSERT GAME NAME!', { params: { q: 'title:' + q} });\n    },\n    //creates new user\n    registerUser: function(newUser){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser);\n    },\n    //logs in user\n    logInUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/api/admin/login/',  user)\n    },\n    //logs out user\n    logOutUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/logout/', user)\n    }\n}","import React  from 'react';\nimport {Button, Modal, Form, Accordion, Card, Col, Row} from 'react-bootstrap';\nimport axios from 'axios';\nimport API from '../../utils/API';\nimport './modal.css'\n\nclass NewModal extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n      loggedIn: false\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.firstName && this.state.lastName && this.name.password && this.name.orgName) {\n      API.saveUser({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        password: this.state.passsword,\n        orgName: this.state.orgName\n      })\n        .catch(err => console.log(err));\n    }\n  };\n\n \n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    const { firstName, lastName, email, password, orgName } = this.state;\n    \n    const newUser = {\n      firstName,\n      lastName,\n      email,\n      password,\n      orgName\n    }\n\n    axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser)\n      .then(res => {\n        console.log(\"NEW USER CREATED\")\n        console.log(res)\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        console.log(err);\n        alert('Invalid Password!')\n      })\n      this.handleClose()\n  }\n\n  logInUser = (event) => {\n    event.preventDefault();\n    localStorage.clear();\n    const { email, password } = this.state;\n\n    const loggedUser={\n      email, password\n    }\n\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n     \n    axios.post('https://real-life-api.herokuapp.com/api/admin/login', loggedUser)\n      .then(res => {\n        console.log(\"YOU'RE LOGGED IN!\")\n        console.log(res)\n        localStorage.getItem(email, password);\n        console.log(localStorage.getItem(email, password));\n        if(res.status === 200){\n          this.setState({\n            loggedIn: true,\n            user:res.data.user\n          })\n        }  \n      })\n      .catch(err => {\n        console.log(\"I'M BROKEN! FIX ME!\")\n        console.log(err);\n      })\n        this.handleClose()      \n  }\n  \n  \n  LoggedOutUser = (event) => {\n    event.preventDefault()\n    console.log('logging out')\n    axios.post('https://real-life-api.herokuapp.com/api/admin/logout').then(response => {\n      console.log(response.data)\n      if (response.status === 200) {\n        this.setState({\n          loggedIn: false,\n          user: null\n        })\n      }\n    })\n  }\n\n  render() {\n    let login = \"Login\";\n    if (this.state.loggedIn) login = \"Welcome back!\";\n\n    return (\n      <>\n        <Button className=\"modalButton\" variant=\"primary\" onClick={this.handleShow}>\n          {login}\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign In!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Form>\n              <Form.Group controlId=\"formGroupEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"String\" onChange={this.handleInputChange} name=\"email\" placeholder=\"johndoe@test.com\" />\n              </Form.Group>\n              <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\"  onChange={this.handleInputChange} name=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <h6><i>Want to create a game? Be an admin and register down below!</i></h6>\n          </Form>\n          {/* This is where the sign up form is!*/}\n          <Accordion>\n          <Card>\n              <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                SignUp\n              </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n              <Form>\n          <Form.Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridFirstName\">\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control type=\"String\" value={this.state.firstName} name = 'firstName' onChange={this.handleInputChange} placeholder=\"John\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridLastName\">\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control type=\"String\" value={this.state.lastName} name = 'lastName' onChange={this.handleInputChange} placeholder=\"Doe\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"String\" value={this.state.email} name = 'email' onChange={this.handleInputChange} placeholder=\"Enter email\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"String\" value={this.state.password} name = 'password' onChange={this.handleInputChange} placeholder=\"Password\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridOrg\">\n                  <Form.Label>Organization Name</Form.Label>\n                  <Form.Control type=\"String\" value={this.state.orgName} name = 'orgName' onChange={this.handleInputChange} placeholder=\"nunyaINC\" />\n                  </Form.Group>\n              </Row>\n          </Form.Row>\n          <Button className=\"modalButton\" onClick={this.registerUser} variant=\"primary\" type=\"submit\">\n          Register\n          </Button>\n          </Form>\n              </Card.Body>\n              </Accordion.Collapse>\n          </Card>\n      {/* This is where the sign up form pops up  */}\n      </Accordion>\n          </Modal.Body>\n          <Modal.Footer>\n           {/* <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>               */}\n            <Button className=\"modalButton\" onClick={this.logInUser} variant=\"primary\" type=\"submit\" data-dismisss='modal'> \n              Submit \n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>        \n    );\n  }\n}\n export default NewModal;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../Modal\"\nimport \"./nav.css\"\n\nclass Nav extends React.Component {\n\n  state = {\n    name: this.props.userName,\n\n    // below is for nav\n    open: false,\n    width: window.innerWidth\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.userName !== prevState.name) {\n      return { name: nextProps.userName }\n    }\n    else\n      return null;\n  }\n\n  updateWidth = () => {\n    // newState is whatever width the browser is at\n    const newState = { width: window.innerWidth };\n\n    // set newState's open key to false if conditions met\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    // setting newState of updated browser's width\n    this.setState(newState);\n  };\n\n  // method for toggling hamburger nav on smaller screens\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      // <div className=\"nav-bar text-right\">\n      //   <div className=\"title\">\n      //     Game of Real Life\n      //   </div>\n      //   <Modal/>\n      // </div>\n      <nav className=\"appNav navbar sticky-top navbar-expand-lg navbar-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          Real Game of Life\n        </Link>\n        <button\n          // this is for onClick of hamburger\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* determining if hamburger toggle will open or not */}\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          {/* <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                About Us\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/create\" || \"/create/avatars\" || \"/create/questions\" ? \"nav-link active\" : \"nav-link\"}\n                to={`/create`}\n              >\n                Create\n              </Link>\n            </li>\n          </ul> */}\n          <Modal />\n        </div>\n        {/* <Modal /> */}\n      </nav>\n    )\n  }\n}\nexport default Nav;\n\n","// import react package\nimport React from \"react\";\n\n\n// takes in children passed down from Home/Saved JS pages, the container is set to fluid\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// takes in children passed down from Home/Saved JS pages, the div is set to fluid\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// takes in children passed down from Home/Saved JS pages\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")\n      }\n    >\n      {children}\n    </div>\n  );\n}","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Button from \"../Button\";\nimport { Container, Row, Col } from '../Grid'\n\n\nclass InputField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: '' };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value }, this.props.updateState({ gameCode: event.target.value })\n    );\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"sm-12\">\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\" className=\"thisForm\">\n                <Form.Control\n                  type=\"text\" placeholder=\"Game Code\" value={this.state.value} onChange={this.handleChange} />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col size=\"sm-12\">\n            <Link to=\"/lobby\"><Button text=\"Join Game\"><input type=\"submit\" value=\"Join Game\" /></Button></Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default InputField;\n\n\n\n\n     // <form onSubmit={this.handleSubmit}>\n      //   <label>\n      //     Game Code:\n      //     <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n      //   </label>\n      //   <Link to=\"/lobby\"><input type=\"submit\" value=\"Join Game\" /></Link>\n      // </form>\n\n\n\n      // <div className=\"container\">\n      //   <div className=\"row\">\n      //     <div className=\"col-sm-4\">\n      //       <Form>\n      //         <Form.Group controlId=\"formBasicEmail\" className=\"thisForm\">\n      //           <Form.Control\n      //             type=\"text\" placeholder=\"Game Code\" value={this.state.value} onChange={this.handleChange} />\n      //         </Form.Group>\n      //       </Form>\n      //     </div>\n      //     <div className=\"col-sm-4\">\n      //       <Link to=\"/lobby\"><input type=\"submit\" value=\"Join Game\" /></Link>\n      //     </div>\n      //   </div>\n      // </div>\n","import React from \"react\";\nimport Button from \"../Button\"\nimport Nav from \"../Nav\"\nimport InputField from \"../InputField\"\nimport { Link, withRouter } from 'react-router-dom'\nimport { Container, Row, Col } from '../Grid'\n\nimport \"./landingPage.css\"\n\nconst LandingPage = (props) => {\n\n  let codeGen = () => {\n    // generate game code\n    let animals = [\"aardvark\", \"abalone\", \"anteater\", \"antelope\", \"baboon\", \"bat\", \"buffalo\", \"camel\", \"capybara\", \"chimp\", \"cougar\", \"dolphin\", \"egret\", \"falcon\", \"flamingo\", \"fox\", \"gecko\", \"gibbon\", \"goat\", \"moose\", \"wombat\", \"walrus\", \"toad\", \"squirrel\", \"piglet\", \"meerkat\", \"lioness\", \"potato\", \"cow\", \"tuna\", \"eel\", \"bees\"];\n\n    let adjectives = [\"glorious\", \"hilarious\", \"monstrous\", \"squishy\", \"orange\", \"sneaky\", \"long\", \"tiny\", \"squinty\", \"round\", \"fluffy\", \"genius\", \"unending\", \"immortal\", \"broke\", \"grumpy\", \"fake\", \"definitely\", \"probably\", \"doubtful\", \"intrepid\", \"dubious\", \"powerful\", \"terrible\", \"floppy\", \"pointy\", \"honking\", \"slippery\"];\n\n    let rando = Math.floor(Math.random() * 9) + 1;\n    rando *= 10;\n    rando += Math.floor(Math.random() * 9) + 1;\n\n    let code = adjectives[Math.floor(Math.random() * adjectives.length)];\n    code += animals[Math.floor(Math.random() * animals.length)];\n    code += rando;\n    console.log(`code: ${code}`);\n    return code\n  }\n\n  let launchDefaultGame = () => {\n    props.updateState({ gameCode: codeGen() })\n    props.history.push('/lobby');\n  }\n\n  return (\n    <div>\n      <Nav loggedIn={props.state.loggedIn} userName={props.state.userName} />\n      <Container>\n        <Row>\n          <Col size=\"sm-12\">\n            <div className=\"appHero\">\n              <h1 className=\"text-center appHeader\">Real Game of Life</h1>\n            </div>\n\n          </Col>\n        </Row>\n\n        <Row>\n          <Col size=\"sm-12\">\n            <h4 className=\"text-center appSubHeader orange\">Navigate through life's <em>real</em> issues!</h4>\n          </Col>\n        </Row>\n\n        <Row>\n\n          <Col size=\"sm-6\">\n            <Row>\n              <Col size=\"sm-12\">\n                <h5 className=\"text-center landingIns\"><strong className=\"orange\">For Game Hosts:</strong>\n                  <br></br>\n                  <br></br>\n                  Start by either launching our default game, or by creating or editing a custom game\n                  <br></br>\n                  (must be logged in as an admin for this).</h5>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col size=\"sm-12\">\n                <Button text=\"Launch Default Game\" onClick={launchDefaultGame} />\n              </Col>\n            </Row>\n\n            <Row>\n              <Col size=\"sm-12\">\n                <a href='https://aprilleperez.github.io/realgameoflife_admin/'><Button text=\"Create/Edit Games\" /></a>\n              </Col>\n            </Row>\n          </Col>\n\n\n          <Col size=\"sm-6\">\n            <Row>\n              <Col size=\"sm-12\">\n                <h5 className=\"text-center landingIns\"><strong className=\"orange\">For Game Players:</strong>\n                <br></br>\n                <br></br>\n                Enter a game code below provided to you by the host.</h5>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col size=\"sm-12\">\n                <InputField updateState={props.updateState} />\n              </Col>\n            </Row>\n          </Col>\n\n        </Row>\n\n      </Container>\n    </div >\n  )\n}\n\nexport default withRouter(LandingPage);\n\n\n\n\n\n\n\n\n    // <div>\n    //   <Nav loggedIn={props.state.loggedIn} userName={props.state.userName} />\n    //   <div className=\"jumbotron m-5 fluid\">\n    //     <div className=\"row fluid\">\n    //       {/* onClick={launchDefaultGame} */}\n    //       <div className=\"col-sm-6\" onClick={launchDefaultGame}>\n    //         <Button text=\"Launch Default Game\" />\n    //       </div>\n\n    //       <div className=\"col-sm-6\">\n    //         <Link to='https://aprilleperez.github.io/realgameoflife_admin/' className=\"ml-3\"><Button text=\"Create/Edit Games\" /></Link>\n    //       </div>\n    //       {/* <a href='https://aprilleperez.github.io/realgameoflife_admin/' className=\"ml-3\"><Button text=\"Create/Edit Games\" /></a> */}\n    //     </div>\n\n    //     <div className=\"row mt-5 fluid\">\n    //       <h1 className=\"ml-3 align-bottom\">Enter Game Code:</h1>\n\n    //     </div>\n    //     <InputField updateState={props.updateState} />\n    //   </div>\n    // </div >","import React from \"react\";\nimport Nav from \"../Nav\"\nimport Button from \"../Button\"\nimport { Redirect, Link, withRouter } from \"react-router-dom\"\n// import { Container } from \"react-bootstrap\"\nimport { Container, Row, Col } from '../Grid'\nimport \"./lobby.css\"\nimport axios from 'axios';\n\nclass Lobby extends React.Component {\n\n  state = {\n    host: false,\n    players: 0\n  }\n\n  getDefaultGame = async () => {\n    let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n    // console.log(results)\n    this.props.updateState({ gameObj: results.data })\n  }\n\n  gameLaunchHandler = () => {\n    console.log(\"getting game\");\n    this.getDefaultGame();\n  }\n\n  // Maybe use this later to clean up the code a little\n  componentDidMount() { }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // console.log(`socket ID is ${socket.id}`);\n\n    // listen for game start message\n    socket.on(\"gameStart\", async () => {\n      console.log(\"heard gameStart\")\n      let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n\n      //hardcoding in the game, needs update\n      this.props.updateState({ gameObj: results.data[0] })\n      console.log(results.data[0])\n\n      this.props.history.push('/game');\n    })\n\n    if (this.props.state.gameCode) {\n      if (!this.state.host)\n        socket.emit(\"gameNum\", this.props.state.gameCode);\n\n\n      // small bug, triggers like 60 times, doesn't break anything though\n      socket.on(\"playerCount\", (count) => {\n        console.log(\"Players:\", count);\n        if (count !== this.state.players)\n          this.setState({ players: count });\n      })\n\n      // if we receive the \"You're the host!\"\" message\n      socket.on(\"host\", () => {\n        console.log(\"host message...\");\n        if (!this.state.host) {\n          this.setState({ host: true });\n          // also update top level state \n          this.props.updateState({ host: true })\n        }\n      })\n\n      let topMessage = \"\";\n\n      this.state.host ?\n        topMessage =\n        <React.Fragment>\n          <div className=\"hostLobby\">\n            <Container>\n              <Row>\n                <Col size=\"sm-6\">\n                  <Row>\n                    <Col size=\"sm-12\">\n                      <h5 className=\"text-center lobbyH5\">To join go to:</h5>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col size=\"sm-12\">\n                      <div className=\"linksToShare\">\n                        <h5 className=\"text-center\">https://bit.ly/2JiJkmy</h5>\n                      </div>\n                    </Col>\n                  </Row>\n                </Col>\n\n                <Col size=\"sm-6\">\n                  <Row>\n                    <Col size=\"sm-12\">\n                      <h5 className=\"text-center lobbyH5\">and enter code:</h5>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col size=\"sm-12\">\n                      <div className=\"linksToShare\">\n                        <h5 className=\"text-center\">{this.props.state.gameCode}</h5>\n                      </div>\n                    </Col>\n                  </Row>\n\n                </Col>\n              </Row>\n\n            </Container>\n          </div>\n          {/* <div>To join go to</div>\n          <div><h1>https://bit.ly/2JiJkmy</h1></div>\n          <div>and enter code:</div>\n          <div><h1>{this.props.state.gameCode}</h1></div> */}\n        </React.Fragment>\n        : topMessage =\n        <div className=\"playerLobby\">\n          Waiting for game to start\n        </div>\n\n      // construct players ready string and icons\n      let playerCountMessage = \"\";\n      let playerIcons = [];\n      let s = \"s\";\n      if (this.state.players === 1)\n        s = \"\";\n      if (this.state.host) {\n        playerCountMessage = `${this.state.players} player${s} ready`;\n        for (let i = 0; i < this.state.players; i++) {\n          playerIcons.push(<img src=\"smiley.png\" key={i} alt=\"player\"></img>)\n        }\n\n        let jumbo = \"\";\n        jumbo =\n          <div className=\"jumbotron m-5\">\n            <p>{playerCountMessage}</p>\n            <div className=\"row players\">\n              {playerIcons}\n            </div>\n          </div>\n\n        return (\n          // host view\n          <div>\n            <Nav loggedIn={this.props.state.loggedIn} userName={this.props.state.userName} />\n            <div className=\"container-fluid\">\n              <div className=\"top-message\">{topMessage}</div>\n              {jumbo}\n            </div>\n            <Container>\n              <div className=\"\">\n                <Link to=\"/game\" onClick={this.gameLaunchHandler}>\n                  <Button buttonType=\"green\" text=\"Launch Game\" />\n                </Link>\n              </div>\n            </Container>\n          </div >\n        )\n      }\n      return (\n        // player view\n        <div>\n          <div className=\"container\">\n            <div className=\"top-message\">{topMessage}</div>\n          </div>\n        </div >\n      )\n    }\n    return (\n      <div>\n        <Redirect to='/' />\n      </div>\n    )\n  }\n}\n\n// wrapping the Lobby component in withRouter allows the history push up above for forced redirect\nexport default withRouter(Lobby);","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\nimport \"./Responses.css\"\nimport \"../Game/game.css\"\n\nclass Responses extends React.Component {\n  state = {\n    choiceMade: false,\n    choice: undefined,\n    timer: 20,\n  }\n\n  componentDidMount() {\n    console.log(\"Responses mounted, starting timer\")\n    let time = this.state.timer;\n\n    let tMinus = setInterval(() => {\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n      } else {\n        // if the timer runs out, choose the default option\n        clearInterval(tMinus);\n        this.madeChoice(0)\n      }\n    }, 1000)\n\n\n    //move everything to componentdidmount?\n\n    let avatar = this.props.avatar;\n    let question = this.props.question;\n    let traitList = this.props.traits;\n    let tName1 = question.trait1;\n    let tName2 = question.trait2;\n\n    let score1 = \"\";\n    let score2 = \"\";\n\n    // find out which traits we care about for this questions\n    // match trait name to trait number\n    for (let i = 1; i < 6; i++) {\n      console.log(`tName1: ${tName1}, ${traitList[\"trait\" + i]}`)\n      if (tName1 === traitList[\"trait\" + i]) {\n        score1 = avatar[\"trait\" + i];\n        console.log(`${tName1}, which is trait${i}, currently ${score1} points`)\n        this.setState({score1: score1})\n      }\n      console.log(`tName2: ${tName2}, ${traitList[\"trait\" + i]}`)\n      if (tName2 === traitList[\"trait\" + i]) {\n        score2 = avatar[\"trait\" + i];\n        console.log(`${tName2}, which is trait${i}, currently ${score2} points`)\n        this.setState({score2: score2})\n      }\n    }\n  }\n\n  madeChoice(num) {\n    // player's answer\n    if (!this.state.choiceMade) {\n      this.setState({ choiceMade: true, choice: num })\n      this.props.choiceCB(num);\n      console.log(`you chose response #${num}`);\n      document.getElementById(num).setAttribute(\"class\", \"selectedAnswer\")\n      this.props.socket.emit(\"choiceMade\", this.props.gameCode);\n    }\n  }\n\n  render() {\n\n    let ansArr = [];\n\n    // add up the current values of the relevant traits for this question, and disable any responses the player isn't qualified for\n    this.props.answers.forEach((elem, i) => {\n      console.log(this.state.score1, this.state.score2)\n      if (this.state.score1 + this.state.score2 > ((i + 1) * 4 - 4)) {\n        ansArr.push(\n          <div className=\"answer\" id={i} key={i} onClick={() => { this.madeChoice(i) }}>\n            <p>{elem.response}</p>\n          </div>\n        )\n      } else {\n        ansArr.push(\n          <div className=\"invalid\" id={i} key={i}>\n            <p>{elem.response}</p>\n          </div>\n        )\n      }\n    });\n\n\n\n    return (\n      <div className=\"centerDivs\">\n        <div>{ansArr}</div>\n        <br></br>\n        <div>Timer: {this.state.timer}</div>\n      </div>\n    )\n  }\n}\n\nexport default Responses","import React from \"react\";\nimport \"./outcomes.css\";\n\nfunction Outcomes(props) {\n\n  let gameObj = props.gameObj;\n  let avatar = props.avatar;\n  let qNum = props.qNum;\n  let choice = props.choice;\n  let outcome = gameObj.questions[qNum].responses[choice].outcomes;\n\n  let score1 = outcome[0].amount;\n  let score2 = outcome[1].amount;\n\n  props.statsCB();\n\n  if (score1 > 0) score1 = `+${score1}`;\n  if (score2 > 0) score2 = `+${score2}`;\n\n  console.log(gameObj)\n\n  return (\n    <React.Fragment>\n      <br></br>\n      <div className=\"centerDivs\">\n        <h1>\n          Here's what happened:\n          <div>{outcome[0].text}</div>\n          <br></br>\n          <div>{outcome[0].trait}: {score1}</div>\n          <div>{outcome[1].trait}: {score2}</div>\n        </h1>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Outcomes;","import React from 'react'\nimport Responses from \"../Responses\"\nimport Outcomes from \"../Outcomes\"\nimport \"./game.css\"\n// import { Redirect } from \"react-router-dom\"\n\nclass Game extends React.Component {\n\n  state = {\n    gameState: \"prestart\",\n    currentQuestion: 0,\n    allowTimer: true,\n    timer: 10,\n    avatar: undefined,\n    choice: undefined,\n    startingTraits: undefined,\n    currentStats: undefined\n  }\n\n  componentDidMount() {\n    // If this is the host, tell all the player clients to start\n    if (this.props.state.host) {\n      this.props.socket.emit(\"startPlayers\", this.props.state.gameCode, this.props.state.gameObj)\n    }\n    else {\n      // if not the host, select an avatar and start game\n      let rand = Math.floor(Math.random() * this.props.state.gameObj.avatars.length)\n      this.setState({\n        avatar: this.props.state.gameObj.avatars[rand],\n        gameState: \"intro\"\n      })\n    }\n\n    this.countdown(10, \"QandA\");\n\n    // listen for trigger to show outcome\n    this.props.socket.on(\"showResult\", () => {\n      console.log(\"setting gameState to outcomes\");\n      this.setState({ gameState: \"outcomes\" });\n\n      if (this.state.currentQuestion < this.props.state.gameObj.questions.length - 1) {\n        this.countdown(15, \"QandA\");\n      }\n      else // if we've run out of questions, end the game\n        this.countdown(15, \"end\")\n    })\n  }\n\n  countdown = (num, nextGameState) => {\n    // console.log(`starting countdown: ${num} ${currentGameState} ${nextGameState}`)\n    this.setState({ timer: num })\n\n    let tMinus = setInterval(() => {\n      let time = this.state.timer;\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n        return\n      }\n      // console.log(`this.state.gameState: ${this.state.gameState}, currentGameState: ${currentGameState}`)\n      // if (this.state.gameState === currentGameState) {\n      else {\n        // when the timer runs out, move to the first question\n        console.log(`setting gamestate as ${nextGameState}`)\n        // increment question when we move on to a new QandA state\n        if (this.state.gameState === \"outcomes\" && nextGameState === \"QandA\")\n          this.setState({ currentQuestion: this.state.currentQuestion + 1 })\n        this.setState({\n          gameState: nextGameState,\n          allowTimer: true\n        })\n        clearInterval(tMinus)\n      }\n    }, 1000)\n\n\n  }\n\n  choiceCB = (num) => {\n    this.setState({ choice: num })\n    console.log(`setting choice ${num} in Game component`)\n  }\n\n  updateStats = (stats) => {\n    // MAKE THIS UPDATE CURRENTSTATS\n    return null\n  }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // listen for game start message, relevant for host\n    socket.on(\"gameStart\", () => {\n      this.setState({ gameState: \"intro\" })\n    })\n\n    if (this.props.state.gameObj) {\n      let gameObj = this.props.state.gameObj;\n\n      // **************************************\n      // ************ HOST VIEWS **************\n      // **************************************\n      if (this.props.state.host) {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            return (\n              <div className=\"centerDivs\">\n                <h1>\n                  <div>{gameObj.name}</div>\n                  <br></br>\n                  <div>Game starts in: {this.state.timer} seconds</div>\n                </h1>\n              </div>\n            )\n\n          case \"QandA\":\n            return (\n              <div className=\"centerDivs hostQuestions\">\n                <h1 className=\"text-center\">Question\n                  <br></br>\n                  {gameObj.questions[this.state.currentQuestion].Q}</h1>\n              </div>\n            )\n\n          case \"outcomes\":\n            return (\n              <div className=\"container centerDivs\">\n                <h1>\n                  <div>Well, let's see what that did...</div>\n                  <br></br>\n                  <div>Next question in {this.state.timer}</div>\n                </h1>\n              </div>\n            )\n\n          case \"end\":\n            return (\n              <div className=\"centerDivs\">\n                <h1>Let's see how you did!</h1>\n                <br></br>\n                <a href=\"https://aprilleperez.github.io/realgameoflife_client/\">Back to Site</a>\n              </div>\n            )\n        }\n      }\n      // **************************************\n      // *********** PLAYER VIEWS *************\n      // **************************************\n      else {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            // if we're still waiting for the avatar to load\n            if (!this.state.avatar) return (<div className=\"centerDivs\">avatar loading</div>)\n            else {\n              // Avatar intro view\n              let traits = [];\n              let stats = [];\n              for (let i = 1; i < 6; i++) {\n                stats.push(this.state.avatar[\"trait\" + i]);\n                traits.push(<div>{gameObj.traits[\"trait\" + i] + \": \" + this.state.avatar[\"trait\" + i]}</div>)\n              }\n              if (!this.state.startingTraits)\n                this.setState({ startingTraits: traits, currentStats: stats })\n              return (\n                <React.Fragment>\n                  <div className=\"centerDivs\">\n                    <h1>\n                      <div>{this.state.avatar.name}</div>\n                      <div>{traits}</div>\n                    </h1>\n                  </div>\n                </React.Fragment>\n              )\n            }\n\n          case \"QandA\":\n            return (\n              // show responses for current question\n              <Responses choiceCB={this.choiceCB} timer={this.state.timer} question={gameObj.questions[this.state.currentQuestion]} answers={gameObj.questions[this.state.currentQuestion].responses} socket={this.props.socket} gameCode={this.props.state.gameCode} traits={gameObj.traits} avatar={this.state.avatar} />\n            )\n\n          case \"outcomes\":\n            return (\n              <Outcomes choice={this.state.choice} gameObj={gameObj} avatar={this.state.avatar} qNum={this.state.currentQuestion} statsCB={this.updateStats} />\n            )\n\n          case \"end\":\n\n            return (<div className=\"centerDivs\">\n              <h1>What a wild ride!</h1>\n              <br></br>\n              <h1>{this.state.avatar.name}</h1>\n              <h1>{this.state.startingTraits}</h1>\n              <h1>{this.state.stats}</h1>\n              <a href=\"https://aprilleperez.github.io/realgameoflife_client/\">Back to Site</a>\n            </div>)\n        }\n      }\n    }\n\n\n\n    // default view\n    return (\n      <div className=\"centerDivs\">\n        <h1>LOADING GAME \t(´｡• ᵕ •｡`)</h1>\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom'\n// import Nav from \"../Nav\"\nimport LandingPage from '../LandingPage'\nimport Lobby from \"../Lobby\"\nimport Game from \"../Game\"\n\nclass PrimaryLayout extends React.Component {\n\n  state = {\n  }\n  render() {\n\n    const setGame = (game) => {\n      console.log(`setting game as ${game.name}`)\n      this.setState({gameObj: game})\n    }\n\n    // allows us to pass props (logged in status and username) into the landing page when using a Route. \n    const landingPage = () => {\n      return (<LandingPage state={this.props.state} updateState={this.props.updateState} setGame={setGame} />)\n    }\n\n    const lobby = () => {\n      return <Lobby state={this.props.state} socket={this.props.socket} updateState={this.props.updateState} />\n\n    }\n\n    const game = () => {\n      return <Game state={this.props.state} socket={this.props.socket} />\n    }\n\n    return (\n      <div>\n        {/* <Nav /> */}\n        <Switch>\n          <Route path=\"/game\" render={game} />\n\n          <Route path=\"/lobby\" render={lobby} />\n\n          {/* Uses render to load the landing page via function so we can pass in props */}\n          <Route path=\"/\" exact render={landingPage} />\n\n          {/* Catch all, redirects to landing page */}\n          <Redirect to=\"/\" />\n\n        </Switch>\n      </div>\n    )\n  }\n}\nexport default PrimaryLayout;","import React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css';\nimport PrimaryLayout from '../src/components/PrimaryLayout'\nimport io from \"socket.io-client\";\n\nlet socket = io('https://real-life-api.herokuapp.com/');\n// let socket = io('localhost:3001/');\n\nclass App extends Component {\n\n  state = {\n    gameState: \"start\",\n    loggedIn: false,\n    userName: \"login\",\n    gameCode: \"\",\n    gameObj: undefined,\n    host: false\n  }\n\n  updateState = (vals) => {\n    this.setState(vals);\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename = {process.env.PUBLIC_URL}>\n        <PrimaryLayout\n          state={this.state}\n          updateState={this.updateState}\n          socket={socket}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}