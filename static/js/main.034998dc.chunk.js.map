{"version":3,"sources":["components/Button/index.js","utils/API.js","components/Modal/index.js","components/Nav/index.js","components/InputField/index.js","components/LandingPage/index.js","components/Lobby/index.js","components/Responses/index.js","components/Outcomes/index.js","components/Game/index.js","components/PrimaryLayout/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","className","buttonType","react_default","a","createElement","text","API","getGames","q","axios","get","params","registerUser","newUser","post","logInUser","user","logOutUser","NewModal","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","target","name","value","setState","defineProperty","handleFormSubmit","preventDefault","state","firstName","lastName","password","orgName","saveUser","passsword","catch","err","console","log","_this$state","email","then","res","history","push","localStorage","clear","_this$state2","loggedUser","setItem","status","loggedIn","data","LoggedOutUser","response","handleShow","bind","assertThisInitialized","handleClose","show","login","Fragment","es_Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","placeholder","Accordion","Card","Toggle","as","eventKey","Collapse","Row","Col","Footer","React","Component","Nav","userName","components_Modal","nextProps","prevState","InputField","handleChange","handleSubmit","updateState","gameCode","onSubmit","react_router_dom","to","withRouter","codeGen","animals","adjectives","rando","Math","floor","random","code","length","concat","components_Nav","components_Button","href","components_InputField","Lobby","host","players","getDefaultGame","_callee","results","regenerator_default","wrap","_context","prev","next","sent","gameObj","stop","gameLaunchHandler","_this2","socket","on","asyncToGenerator","mark","_callee2","_context2","emit","count","topMessage","playerCountMessage","playerIcons","s","i","src","key","alt","jumbo","Container","react_router","Responses","choiceMade","choice","undefined","timer","time","tMinus","setInterval","clearInterval","madeChoice","avatar","question","traitList","traits","tName1","trait1","tName2","trait2","score1","score2","num","choiceCB","document","getElementById","setAttribute","_this3","ansArr","answers","forEach","elem","id","Outcomes","qNum","outcome","questions","responses","outcomes","trait","upDown","Game","gameState","currentQuestion","allowTimer","countdown","nextGameState","rand","avatars","Q","components_Responses","components_Outcomes","PrimaryLayout","setGame","game","path","render","components_Game","components_Lobby","exact","components_LandingPage","io","App","vals","basename","process","components_PrimaryLayout","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.034998dc.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.css\";\n\n\nfunction Button(props) {\n\n  let className = \"button \" + props.buttonType;\n\n  return (\n      <button className={className}>{props.text}</button>\n  )\n}\n\nexport default Button;","//import axios\n//====================\nimport axios from \"axios\";\n\nexport default {\n    getGames: function(q) {\n        return axios.get('https://real-life-api.herokuapp.com/api/games/ + INSERT GAME NAME!', { params: { q: 'title:' + q} });\n    },\n    //creates new user\n    registerUser: function(newUser){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser);\n    },\n    //logs in user\n    logInUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/api/admin/login/',  user)\n    },\n    //logs out user\n    logOutUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/logout/', user)\n    }\n}","import React  from 'react';\nimport {Button, Modal, Form, Accordion, Card, Col, Row} from 'react-bootstrap';\nimport axios from 'axios';\nimport API from '../../utils/API';\n\nclass NewModal extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n      loggedIn: false\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.firstName && this.state.lastName && this.name.password && this.name.orgName) {\n      API.saveUser({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        password: this.state.passsword,\n        orgName: this.state.orgName\n      })\n        .catch(err => console.log(err));\n    }\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    const { firstName, lastName, email, password, orgName } = this.state;\n    \n    const newUser = {\n      firstName,\n      lastName,\n      email,\n      password,\n      orgName\n    }\n\n    axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser)\n      .then(res => {\n        console.log(\"NEW USER CREATED\")\n        console.log(res)\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  logInUser = (event) => {\n    event.preventDefault();\n    localStorage.clear();\n    const { email, password } = this.state;\n\n    const loggedUser={\n      email, password\n    }\n\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n\n    axios.post('https://real-life-api.herokuapp.com/api/admin/login', loggedUser)\n      .then(res => {\n        console.log(\"YOU'RE LOGGED IN!\")\n        console.log(res)\n        if(res.status === 200){\n          this.setState({\n            loggedIn: true,\n            user:res.data.user\n          })\n        }\n      })\n      .catch(err => {\n        console.log(\"I'M BROKEN! FIX ME!\")\n        console.log(err);\n      })\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  \n  LoggedOutUser = (event) => {\n    event.preventDefault()\n    console.log('logging out')\n    axios.post('/auth/logout').then(response => {\n      console.log(response.data)\n      if (response.status === 200) {\n        this.setState({\n          loggedIn: false,\n          user: null\n        })\n      }\n    })\n  }\n\n  \n  render() {\n    let login = \"Login\";\n    if (this.state.loggedIn) login = \"Logout\";  \n    \n    return (\n      <>\n        <Button variant=\"primary\" onClick={this.handleShow}>\n          {login}\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign In!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Form>\n              <Form.Group controlId=\"formGroupEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" onChange={this.handleInputChange} name=\"email\" placeholder=\"johndoe@test.com\" />\n              </Form.Group>\n              <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\"  onChange={this.handleInputChange} name=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <h6><i>Want to create a game? Be an admin and register down below!</i></h6>\n          </Form>\n          {/* This is where the sign up form is!*/}\n          <Accordion>\n          <Card>\n              <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                SignUp\n              </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n              <Form>\n          <Form.Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridFirstName\">\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control type=\"firstName\" value={this.state.firstName} name = 'firstName' onChange={this.handleInputChange} placeholder=\"John\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridLastName\">\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control type=\"lastName\" value={this.state.lastName} name = 'lastName' onChange={this.handleInputChange} placeholder=\"Doe\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" value={this.state.email} name = 'email' onChange={this.handleInputChange} placeholder=\"Enter email\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" value={this.state.password} name = 'password' onChange={this.handleInputChange} placeholder=\"Password\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridOrg\">\n                  <Form.Label>Organization Name</Form.Label>\n                  <Form.Control type=\"orgName\" value={this.state.orgName} name = 'orgName' onChange={this.handleInputChange} placeholder=\"nunyaINC\" />\n                  </Form.Group>\n              </Row>\n          </Form.Row>\n          <Button onClick={this.registerUser} variant=\"primary\" type=\"submit\">\n          <Button onClick={this.handleClose}>\n          Register \n          </Button>\n          </Button>\n          </Form>\n              </Card.Body>\n              </Accordion.Collapse>\n          </Card>\n      {/* This is where the sign up form pops up  */}\n      </Accordion>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>              \n            <Button onClick={this.logInUser} variant=\"primary\" type=\"submit\">\n            <Button onClick={this.handleClose}>\n              Submit \n              {/* create a redirect link to admin page */}\n            </Button>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>        \n    );\n  }\n}\n export default NewModal;","import React from \"react\";\nimport Modal from \"../Modal\"\nimport \"./nav.css\"\n\nclass Nav extends React.Component {\n\n  state = {\n    name: this.props.userName\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.userName !== prevState.name) {\n      return { name: nextProps.userName }\n    }\n    else\n      return null;\n  }\n\n  render() {\n    return (\n      <div className=\"nav-bar text-right\">\n        <div className=\"title\">\n          Game of Real Life\n        </div>\n        <Modal/>\n      </div>\n    )\n  }\n}\nexport default Nav;","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\n// import Button from \"../Button\"\n\n\nclass InputField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value}, this.props.updateState({gameCode: event.target.value})\n    );\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Game Code:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <Link to=\"/lobby\"><input type=\"submit\" value=\"Join Game\" /></Link>\n      </form>\n\n    );\n  }\n}\n\nexport default InputField;","import React from \"react\";\nimport Button from \"../Button\"\nimport Nav from \"../Nav\"\nimport InputField from \"../InputField\"\nimport { Link, withRouter } from 'react-router-dom'\n\nimport \"./landingPage.css\"\n\nconst LandingPage = (props) => {\n\n  let codeGen = () => {\n    // generate game code\n    let animals = [\"aardvark\", \"abalone\", \"anteater\", \"antelope\", \"baboon\", \"bat\", \"buffalo\", \"camel\", \"capybara\", \"chimp\", \"cougar\", \"dolphin\", \"egret\", \"falcon\", \"flamingo\", \"fox\", \"gecko\", \"gibbon\", \"goat\", \"moose\", \"wombat\", \"walrus\", \"toad\", \"squirrel\", \"piglet\", \"meerkat\", \"lioness\", \"potato\", \"cow\", \"tuna\", \"eel\", \"bees\"];\n\n    let adjectives = [\"glorious\", \"hilarious\", \"monstrous\", \"squishy\", \"orange\", \"sneaky\", \"long\", \"tiny\", \"squinty\", \"round\", \"fluffy\", \"genius\", \"unending\", \"immortal\", \"broke\", \"grumpy\", \"fake\", \"definitely\", \"probably\", \"doubtful\", \"intrepid\", \"dubious\", \"powerful\", \"terrible\", \"floppy\", \"pointy\", \"honking\", \"slippery\"];\n\n    let rando = Math.floor(Math.random() * 9) + 1;\n    rando *= 10;\n    rando += Math.floor(Math.random() * 9) + 1;\n\n    let code = adjectives[Math.floor(Math.random() * adjectives.length)];\n    code += animals[Math.floor(Math.random() * animals.length)];\n    code += rando;\n    console.log(`code: ${code}`);\n    return code\n  }\n\n  let launchDefaultGame = () => {\n    props.updateState({ gameCode: codeGen() })\n    props.history.push('/lobby');\n  }\n\n  return (\n    <div>\n      <Nav loggedIn={props.state.loggedIn} userName={props.state.userName} />\n      <div className=\"jumbotron m-5\">\n        <div className=\"row\" onClick={launchDefaultGame}>\n          <Button text=\"Launch a Game\" buttonType=\"green\" />\n\n          <a href='https://aprilleperez.github.io/realgameoflife_admin/' className=\"ml-3\"><Button text=\"Create/Edit Games\" buttonType=\"green\" /></a>\n        </div>\n        <div className=\"row mt-5\">\n          <h1 className=\"ml-3 align-bottom\">Enter Game Code:</h1>\n\n        </div>\n        <InputField updateState={props.updateState} />\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(LandingPage);","import React from \"react\";\nimport Nav from \"../Nav\"\nimport Button from \"../Button\"\nimport { Redirect, Link, withRouter } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport \"./lobby.css\"\nimport axios from 'axios';\n\nclass Lobby extends React.Component {\n\n  state = {\n    host: false,\n    players: 0\n  }\n\n  getDefaultGame = async () => {\n    let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n    // console.log(results)\n    this.props.updateState({ gameObj: results.data })\n  }\n\n  gameLaunchHandler = () => {\n    console.log(\"getting game\");\n    this.getDefaultGame();\n  }\n\n  // Maybe use this later to clean up the code a little\n  componentDidMount() { }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // console.log(`socket ID is ${socket.id}`);\n\n    // listen for game start message\n    socket.on(\"gameStart\", async () => {\n      console.log(\"heard gameStart\")\n      let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n\n      //hardcoding in the game, needs update\n      this.props.updateState({ gameObj: results.data[18] })\n      console.log(results.data[18])\n\n      this.props.history.push('/game');\n    })\n\n    if (this.props.state.gameCode) {\n      if (!this.state.host)\n        socket.emit(\"gameNum\", this.props.state.gameCode);\n\n\n      // small bug, triggers like 60 times, doesn't break anything though\n      socket.on(\"playerCount\", (count) => {\n        console.log(\"Players:\", count);\n        if (count !== this.state.players)\n          this.setState({ players: count });\n      })\n\n      // if we receive the \"You're the host!\"\" message\n      socket.on(\"host\", () => {\n        console.log(\"host message...\");\n        if (!this.state.host) {\n          this.setState({ host: true });\n          // also update top level state \n          this.props.updateState({ host: true })\n        }\n      })\n\n      let topMessage = \"\";\n\n      this.state.host ?\n        topMessage = (\"To join this game, go to *URL* and enter the code \" + this.props.state.gameCode)\n        : topMessage = \"Waiting for game to start\"\n\n      // construct players ready string and icons\n      let playerCountMessage = \"\";\n      let playerIcons = [];\n      let s = \"s\";\n      if (this.state.players === 1)\n        s = \"\";\n      if (this.state.host) {\n        playerCountMessage = `${this.state.players} player${s} ready`;\n        for (let i = 0; i < this.state.players; i++) {\n          playerIcons.push(<img src=\"smiley.png\" key={i} alt=\"player\"></img>)\n        }\n\n        let jumbo = \"\";\n        jumbo =\n          <div className=\"jumbotron m-5\">\n            <p>{playerCountMessage}</p>\n            <div className=\"row players\">\n              {playerIcons}\n            </div>\n          </div>\n\n        return (\n          // host view\n          <div>\n            <Nav loggedIn={this.props.state.loggedIn} userName={this.props.state.userName} />\n            <div className=\"container-fluid\">\n              <div className=\"top-message\">{topMessage}</div>\n              {jumbo}\n            </div>\n            <Container>\n              <div className=\"\">\n                <Link to=\"/game\" onClick={this.gameLaunchHandler}>\n                  <Button buttonType=\"green\" text=\"Launch Game\" />\n                </Link>\n              </div>\n            </Container>\n          </div >\n        )\n      }\n      return (\n        // player view\n        <div>\n          <div className=\"container\">\n            <div className=\"top-message\">{topMessage}</div>\n          </div>\n        </div >\n      )\n    }\n    return (\n      <div>\n        <Redirect to='/' />\n      </div>\n    )\n  }\n}\n\n// wrapping the Lobby component in withRouter allows the history push up above for forced redirect\nexport default withRouter(Lobby);","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\nimport \"./Responses.css\"\n\nclass Responses extends React.Component {\n  state = {\n    choiceMade: false,\n    choice: undefined,\n    timer: 15,\n  }\n\n  componentDidMount() {\n    console.log(\"Responses mounted, starting timer\")\n    let time = this.state.timer;\n\n    let tMinus = setInterval(() => {\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n      } else {\n        // if the timer runs out, choose the default option\n        clearInterval(tMinus);\n        this.madeChoice(0)\n      }\n    }, 1000)\n\n\n    //move everything to componentdidmount?\n\n    let avatar = this.props.avatar;\n    let question = this.props.question;\n    let traitList = this.props.traits;\n    let tName1 = question.trait1;\n    let tName2 = question.trait2;\n\n    let score1 = \"\";\n    let score2 = \"\";\n\n    // find out which traits we care about for this questions\n    // match trait name to trait number\n    for (let i = 1; i < 6; i++) {\n      console.log(`tName1: ${tName1}, ${traitList[\"trait\" + i]}`)\n      if (tName1 === traitList[\"trait\" + i]) {\n        score1 = avatar[\"trait\" + i];\n        console.log(`${tName1}, which is trait${i}, currently ${score1} points`)\n        this.setState({score1: score1})\n      }\n      console.log(`tName2: ${tName2}, ${traitList[\"trait\" + i]}`)\n      if (tName2 === traitList[\"trait\" + i]) {\n        score2 = avatar[\"trait\" + i];\n        console.log(`${tName2}, which is trait${i}, currently ${score2} points`)\n        this.setState({score2: score2})\n      }\n    }\n  }\n\n  madeChoice(num) {\n    // player's answer\n    if (!this.state.choiceMade) {\n      this.setState({ choiceMade: true, choice: num })\n      this.props.choiceCB(num);\n      console.log(`you chose response #${num}`);\n      document.getElementById(num).setAttribute(\"class\", \"selectedAnswer\")\n      this.props.socket.emit(\"choiceMade\", this.props.gameCode);\n    }\n  }\n\n  render() {\n\n    let ansArr = [];\n\n    // add up the current values of the relevant traits for this question, and disable any responses the player isn't qualified for\n    this.props.answers.forEach((elem, i) => {\n      console.log(this.state.score1, this.state.score2)\n      if (this.state.score1 + this.state.score2 > ((i + 1) * 4 - 4)) {\n        ansArr.push(\n          <div className=\"answer\" id={i} key={i} onClick={() => { this.madeChoice(i) }}>\n            <p>{elem.response}</p>\n          </div>\n        )\n      } else {\n        ansArr.push(\n          <div className=\"invalid\" id={i} key={i}>\n            <p>{elem.response}</p>\n          </div>\n        )\n      }\n    });\n\n\n\n    return (\n      <div>\n        <div>{ansArr}</div>\n        <div>Timer: {this.state.timer}</div>\n      </div>\n    )\n  }\n}\n\nexport default Responses","import React from \"react\";\n\nfunction Outcomes(props) {\n\n  let gameObj = props.gameObj;\n  let avatar = props.avatar;\n  let qNum = props.qNum;\n  let choice = props.choice;\n  let outcome = gameObj.questions[qNum].responses[choice].outcomes;\n \n  let trait1 = gameObj.questions[qNum].trait1;\n  let trait2 = gameObj.questions[qNum].trait2;\n\n  console.log(gameObj)\n\n  return (\n    <div className=\"container\">\n      <h1>Here's what happened:</h1>\n      <div>{outcome[0].text}</div>\n      <div>{outcome[0].trait}: {outcome[0].upDown}</div>\n      <div>{outcome[1].trait}: {outcome[1].upDown}</div>\n    </div>\n  )\n}\n\nexport default Outcomes;","import React from 'react'\nimport Responses from \"../Responses\"\nimport Outcomes from \"../Outcomes\"\n// import { Redirect } from \"react-router-dom\"\n\nclass Game extends React.Component {\n\n  state = {\n    gameState: \"prestart\",\n    currentQuestion: 0,\n    allowTimer: true,\n    timer: 10,\n    avatar: undefined,\n    choice: undefined\n  }\n\n  componentDidMount() {\n    // If this is the host, tell all the player clients to start\n    if (this.props.state.host) {\n      this.props.socket.emit(\"startPlayers\", this.props.state.gameCode, this.props.state.gameObj)\n    }\n    else {\n      // if not the host, select an avatar and start game\n      let rand = Math.floor(Math.random() * this.props.state.gameObj.avatars.length)\n      this.setState({\n        avatar: this.props.state.gameObj.avatars[rand],\n        gameState: \"intro\"\n      })\n    }\n\n    this.countdown(10, \"QandA\");\n\n    // listen for trigger to show outcome\n    this.props.socket.on(\"showResult\", () => {\n      console.log(\"setting gameState to outcomes\");\n\n      if (this.state.currentQuestion < this.props.state.gameObj.questions.length - 1) {\n        this.countdown(10, \"QandA\");\n        this.setState({ gameState: \"outcomes\" })\n      }\n      else // if we've run out of questions, end the game\n        this.setState({ gameState: \"end\" })\n    })\n  }\n\n  countdown = (num, nextGameState) => {\n    // console.log(`starting countdown: ${num} ${currentGameState} ${nextGameState}`)\n    this.setState({ timer: num })\n\n    let tMinus = setInterval(() => {\n      let time = this.state.timer;\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n        return\n      }\n      // console.log(`this.state.gameState: ${this.state.gameState}, currentGameState: ${currentGameState}`)\n      // if (this.state.gameState === currentGameState) {\n      else {\n        // when the timer runs out, move to the first question\n        console.log(`setting gamestate as ${nextGameState}`)\n        // increment question when we move on to a new QandA state\n        if (this.state.gameState === \"outcomes\" && nextGameState === \"QandA\")\n          this.setState({ currentQuestion: this.state.currentQuestion + 1 })\n        this.setState({\n          gameState: nextGameState,\n          allowTimer: true\n        })\n        clearInterval(tMinus)\n      }\n    }, 1000)\n\n\n  }\n\n  choiceCB = (num) => {\n    this.setState({ choice: num })\n    console.log(`setting choice ${num} in Game component`)\n  }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // listen for game start message, relevant for host\n    socket.on(\"gameStart\", () => {\n      this.setState({ gameState: \"intro\" })\n    })\n\n    if (this.props.state.gameObj) {\n      let gameObj = this.props.state.gameObj;\n\n      // **************************************\n      // ************ HOST VIEWS **************\n      // **************************************\n      if (this.props.state.host) {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            return (\n              <div>\n                <div>{gameObj.name}</div>\n                <div>Game starts in: {this.state.timer} seconds</div>\n              </div>\n            )\n\n          case \"QandA\":\n            return (\n              <div><h1>Question: {gameObj.questions[this.state.currentQuestion].Q}</h1></div>\n            )\n\n          case \"outcomes\":\n            return (\n              <div className=\"container\">\n                <div>Well, let's see what that did...</div>\n                <div>Next question in {this.state.timer}</div>\n              </div>\n            )\n\n          case \"end\":\n            return (<div><h1>Ze End!</h1></div>)\n        }\n      }\n      // **************************************\n      // *********** PLAYER VIEWS *************\n      // **************************************\n      else {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            // if we're still waiting for the avatar to load\n            if (!this.state.avatar) return (<div>avatar loading</div>)\n            else {\n              // Avatar intro view\n              let traits = [];\n              for (let i = 1; i < 6; i++) {\n                traits.push(<div>{gameObj.traits[\"trait\" + i] + \": \" + this.state.avatar[\"trait\" + i]}</div>)\n              }\n              return (\n                <div>\n                  <div>{this.state.avatar.name}</div>\n                  <div>{traits}</div>\n                </div>\n              )\n            }\n\n          case \"QandA\":\n            return (\n              // show responses for current question\n              <Responses choiceCB={this.choiceCB} timer={this.state.timer} question={gameObj.questions[this.state.currentQuestion]} answers={gameObj.questions[this.state.currentQuestion].responses} socket={this.props.socket} gameCode={this.props.state.gameCode} traits={gameObj.traits} avatar={this.state.avatar} />\n            )\n\n          case \"outcomes\":\n            return (\n              <Outcomes choice={this.state.choice} gameObj={gameObj} avatar={this.state.avatar} qNum={this.state.currentQuestion} />\n            )\n\n          case \"end\":\n            return (<div><h1>Ze End!</h1></div>)\n\n        }\n      }\n    }\n\n\n\n    // default view\n    return (\n      <div>\n        LOADING GAME ^_^\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport LandingPage from '../LandingPage'\nimport Lobby from \"../Lobby\"\nimport Game from \"../Game\"\n\nclass PrimaryLayout extends React.Component {\n\n  state = {\n  }\n  render() {\n\n    const setGame = (game) => {\n      console.log(`setting game as ${game.name}`)\n      this.setState({gameObj: game})\n    }\n\n    // allows us to pass props (logged in status and username) into the landing page when using a Route. \n    const landingPage = () => {\n      return (<LandingPage state={this.props.state} updateState={this.props.updateState} setGame={setGame} />)\n    }\n\n    const lobby = () => {\n      return <Lobby state={this.props.state} socket={this.props.socket} updateState={this.props.updateState} />\n\n    }\n\n    const game = () => {\n      return <Game state={this.props.state} socket={this.props.socket} />\n    }\n\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/game\" render={game} />\n\n          <Route path=\"/lobby\" render={lobby} />\n\n          {/* Uses render to load the landing page via function so we can pass in props */}\n          <Route path=\"/\" exact render={landingPage} />\n\n          {/* Catch all, redirects to landing page */}\n          <Redirect to=\"/\" />\n\n        </Switch>\n      </div>\n    )\n  }\n}\nexport default PrimaryLayout;","import React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css';\nimport PrimaryLayout from '../src/components/PrimaryLayout'\nimport io from \"socket.io-client\";\n\nlet socket = io('https://real-life-api.herokuapp.com/');\n// let socket = io('localhost:3001/');\n\nclass App extends Component {\n\n  state = {\n    gameState: \"start\",\n    loggedIn: false,\n    userName: \"login\",\n    gameCode: \"\",\n    gameObj: undefined,\n    host: false\n  }\n\n  updateState = (vals) => {\n    this.setState(vals);\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename = {process.env.PUBLIC_URL}>\n        <PrimaryLayout\n          state={this.state}\n          updateState={this.updateState}\n          socket={socket}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}