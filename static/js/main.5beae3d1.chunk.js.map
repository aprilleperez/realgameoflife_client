{"version":3,"sources":["components/Button/index.js","utils/API.js","components/Modal/index.js","components/Nav/index.js","components/InputField/index.js","components/LandingPage/index.js","components/Lobby/index.js","components/Responses/index.js","components/Outcomes/index.js","components/Game/index.js","components/PrimaryLayout/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","className","buttonType","react_default","a","createElement","text","API","getGames","q","axios","get","params","registerUser","newUser","post","logInUser","user","logOutUser","NewModal","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","target","name","value","setState","defineProperty","handleFormSubmit","preventDefault","state","firstName","lastName","password","orgName","saveUser","passsword","catch","err","console","log","_this$state","email","then","res","history","push","localStorage","clear","_this$state2","loggedUser","setItem","status","loggedIn","data","LoggedOutUser","response","handleShow","bind","assertThisInitialized","handleClose","show","login","Fragment","es_Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","placeholder","Accordion","Card","Toggle","as","eventKey","Collapse","Row","Col","Footer","React","Component","Nav","userName","components_Modal","nextProps","prevState","InputField","handleChange","handleSubmit","updateState","gameCode","onSubmit","react_router_dom","to","LandingPage","components_Nav","components_Button","href","components_InputField","Lobby","host","players","getDefaultGame","_callee","results","regenerator_default","wrap","_context","prev","next","sent","gameObj","stop","gameLaunchHandler","_this2","socket","on","asyncToGenerator","mark","_callee2","_context2","emit","count","topMessage","playerCountMessage","playerIcons","s","concat","i","src","key","alt","jumbo","Container","react_router","withRouter","Responses","choiceMade","choice","undefined","timer","time","tMinus","setInterval","clearInterval","madeChoice","num","choiceCB","document","getElementById","setAttribute","_this3","ansArr","answers","forEach","elem","id","outcome","calcOutcome","Outcomes","qNum","avatar","questions","responses","outcomes","trait","upDown","Game","gameState","currentQuestion","allowTimer","countdown","nextGameState","rand","Math","floor","random","avatars","length","Q","traits","components_Responses","components_Outcomes","PrimaryLayout","setGame","game","path","render","components_Game","components_Lobby","exact","components_LandingPage","io","App","vals","basename","process","components_PrimaryLayout","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5beae3d1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.css\";\n\n\nfunction Button(props) {\n\n  let className = \"button \" + props.buttonType;\n\n  return (\n      <button className={className}>{props.text}</button>\n  )\n}\n\nexport default Button;","//import axios\n//====================\nimport axios from \"axios\";\n\nexport default {\n    getGames: function(q) {\n        return axios.get('https://real-life-api.herokuapp.com/api/games/ + INSERT GAME NAME!', { params: { q: 'title:' + q} });\n    },\n    //creates new user\n    registerUser: function(newUser){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser);\n    },\n    //logs in user\n    logInUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/api/admin/login/',  user)\n    },\n    //logs out user\n    logOutUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/logout/', user)\n    }\n}","import React  from 'react';\nimport {Button, Modal, Form, Accordion, Card, Col, Row} from 'react-bootstrap';\nimport axios from 'axios';\nimport API from '../../utils/API';\n\nclass NewModal extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n\n    this.state = {\n      show: false,\n      loggedIn: false\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.firstName && this.state.lastName && this.name.password && this.name.orgName) {\n      API.saveUser({\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        password: this.state.passsword,\n        orgName: this.state.orgName\n      })\n        .catch(err => console.log(err));\n    }\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    const { firstName, lastName, email, password, orgName } = this.state;\n    \n    const newUser = {\n      firstName,\n      lastName,\n      email,\n      password,\n      orgName\n    }\n\n    axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser)\n      .then(res => {\n        console.log(\"NEW USER CREATED\")\n        console.log(res)\n        this.props.history.push('/')\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  logInUser = (event) => {\n    event.preventDefault();\n    localStorage.clear();\n    const { email, password } = this.state;\n\n    const loggedUser={\n      email, password\n    }\n\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"password\", password);\n\n    axios.post('https://real-life-api.herokuapp.com/api/admin/login', loggedUser)\n      .then(res => {\n        console.log(\"YOU'RE LOGGED IN!\")\n        console.log(res)\n        if(res.status === 200){\n          this.setState({\n            loggedIn: true,\n            user:res.data.user\n          })\n        }\n      })\n      .catch(err => {\n        console.log(\"I'M BROKEN! FIX ME!\")\n        console.log(err);\n      })\n  }\n\n  handleClose() {\n    this.setState({ show: false });\n  }\n\n  handleShow() {\n    this.setState({ show: true });\n  }\n  \n  LoggedOutUser = (event) => {\n    event.preventDefault()\n    console.log('logging out')\n    axios.post('/auth/logout').then(response => {\n      console.log(response.data)\n      if (response.status === 200) {\n        this.setState({\n          loggedIn: false,\n          user: null\n        })\n      }\n    })\n  }\n\n  \n  render() {\n    let login = \"Login\";\n    if (this.state.loggedIn) login = \"Logout\";  \n    \n    return (\n      <>\n        <Button variant=\"primary\" onClick={this.handleShow}>\n          {login}\n        </Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Sign In!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <Form>\n              <Form.Group controlId=\"formGroupEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" onChange={this.handleInputChange} name=\"email\" placeholder=\"johndoe@test.com\" />\n              </Form.Group>\n              <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\"  onChange={this.handleInputChange} name=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <h6><i>Want to create a game? Be an admin and register down below!</i></h6>\n          </Form>\n          {/* This is where the sign up form is!*/}\n          <Accordion>\n          <Card>\n              <Card.Header>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                SignUp\n              </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n              <Card.Body>\n              <Form>\n          <Form.Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridFirstName\">\n                  <Form.Label>First Name</Form.Label>\n                  <Form.Control type=\"firstName\" value={this.state.firstName} name = 'firstName' onChange={this.handleInputChange} placeholder=\"John\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridLastName\">\n                  <Form.Label>Last Name</Form.Label>\n                  <Form.Control type=\"lastName\" value={this.state.lastName} name = 'lastName' onChange={this.handleInputChange} placeholder=\"Doe\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control type=\"email\" value={this.state.email} name = 'email' onChange={this.handleInputChange} placeholder=\"Enter email\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" value={this.state.password} name = 'password' onChange={this.handleInputChange} placeholder=\"Password\" />\n                  </Form.Group>\n              </Row>\n              <Row>\n                  <Form.Group as={Col} controlId=\"formGridOrg\">\n                  <Form.Label>Organization Name</Form.Label>\n                  <Form.Control type=\"orgName\" value={this.state.orgName} name = 'orgName' onChange={this.handleInputChange} placeholder=\"nunyaINC\" />\n                  </Form.Group>\n              </Row>\n          </Form.Row>\n          <Button onClick={this.registerUser} variant=\"primary\" type=\"submit\">\n          <Button onClick={this.handleClose}>\n          Register \n          </Button>\n          </Button>\n          </Form>\n              </Card.Body>\n              </Accordion.Collapse>\n          </Card>\n      {/* This is where the sign up form pops up  */}\n      </Accordion>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Close\n            </Button>              \n            <Button onClick={this.logInUser} variant=\"primary\" type=\"submit\">\n            <Button onClick={this.handleClose}>\n              Submit \n              {/* create a redirect link to admin page */}\n            </Button>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>        \n    );\n  }\n}\n export default NewModal;","import React from \"react\";\nimport Modal from \"../Modal\"\nimport \"./nav.css\"\n\nclass Nav extends React.Component {\n\n  state = {\n    name: this.props.userName\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.userName !== prevState.name) {\n      return { name: nextProps.userName }\n    }\n    else\n      return null;\n  }\n\n  render() {\n    return (\n      <div className=\"nav-bar text-right\">\n        <div className=\"title\">\n          Game of Real Life\n        </div>\n        <Modal/>\n      </div>\n    )\n  }\n}\nexport default Nav;","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\n// import Button from \"../Button\"\n\n\nclass InputField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value}, this.props.updateState({gameCode: event.target.value})\n    );\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Game Code:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <Link to=\"/lobby\"><input type=\"submit\" value=\"Join Game\" /></Link>\n      </form>\n\n    );\n  }\n}\n\nexport default InputField;","import React from \"react\";\nimport Button from \"../Button\"\nimport Nav from \"../Nav\"\nimport InputField from \"../InputField\"\nimport { Link } from 'react-router-dom'\n\nimport \"./landingPage.css\"\n\nconst LandingPage = (props) => {\n\n  return (\n    <div>\n      <Nav loggedIn={props.state.loggedIn} userName={props.state.userName} />\n      <div className=\"jumbotron m-5\">\n        <div className=\"row\">\n          <Link to=\"/\" className=\"ml-3\"><Button text=\"Launch a Game\" buttonType=\"green\" /></Link>\n         \n          <a href='https://aprilleperez.github.io/realgameoflife_admin/' className=\"ml-3\"><Button text=\"Create/Edit Games\" buttonType=\"green\" /></a>\n        </div>\n        <div className=\"row mt-5\">\n        <h1 className=\"ml-3 align-bottom\">Enter Game Code:</h1>\n        \n        </div>\n        <InputField updateState={props.updateState}/>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage;","import React from \"react\";\nimport Nav from \"../Nav\"\nimport Button from \"../Button\"\nimport { Redirect, Link, withRouter } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport \"./lobby.css\"\nimport axios from 'axios';\n\nclass Lobby extends React.Component {\n\n  state = {\n    host: false,\n    players: 0\n  }\n\n  getDefaultGame = async () => {\n    let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n    // console.log(results)\n    this.props.updateState({ gameObj: results.data })\n  }\n\n  gameLaunchHandler = () => {\n    console.log(\"getting game\");\n    this.getDefaultGame();\n  }\n\n  // Maybe use this later to clean up the code a little\n  componentDidMount() { }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // console.log(`socket ID is ${socket.id}`);\n\n    // listen for game start message\n    socket.on(\"gameStart\", async () => {\n      console.log(\"heard gameStart\")\n      let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n\n      //hardcoding in the game, needs update\n      this.props.updateState({ gameObj: results.data[7] })\n      console.log(results.data[7])\n\n      this.props.history.push('/game');\n    })\n\n    if (this.props.state.gameCode) {\n      if (!this.state.host)\n        socket.emit(\"gameNum\", this.props.state.gameCode);\n\n\n      // small bug, triggers like 60 times, doesn't break anything though\n      socket.on(\"playerCount\", (count) => {\n        console.log(\"Players:\", count);\n        if (count !== this.state.players)\n          this.setState({ players: count });\n      })\n\n      // if we receive the \"You're the host!\"\" message\n      socket.on(\"host\", () => {\n        console.log(\"host message...\");\n        if (!this.state.host) {\n          this.setState({ host: true });\n          // also update top level state \n          this.props.updateState({ host: true })\n        }\n      })\n\n      let topMessage = \"\";\n\n      this.state.host ?\n        topMessage = (\"To join this game, go to *URL* and enter the code \" + this.props.state.gameCode)\n        : topMessage = \"Waiting for game to start\"\n\n      // construct players ready string and icons\n      let playerCountMessage = \"\";\n      let playerIcons = [];\n      let s = \"s\";\n      if (this.state.players === 1)\n        s = \"\";\n      if (this.state.host) {\n        playerCountMessage = `${this.state.players} player${s} ready`;\n        for (let i = 0; i < this.state.players; i++) {\n          playerIcons.push(<img src=\"smiley.png\" key={i} alt=\"player\"></img>)\n        }\n\n        let jumbo = \"\";\n        jumbo =\n          <div className=\"jumbotron m-5\">\n            <p>{playerCountMessage}</p>\n            <div className=\"row players\">\n              {playerIcons}\n            </div>\n          </div>\n\n        return (\n          // host view\n          <div>\n            <Nav loggedIn={this.props.state.loggedIn} userName={this.props.state.userName} />\n            <div className=\"container-fluid\">\n              <div className=\"top-message\">{topMessage}</div>\n              {jumbo}\n            </div>\n            <Container>\n              <div className=\"\">\n                <Link to=\"/game\" onClick={this.gameLaunchHandler}>\n                  <Button buttonType=\"green\" text=\"Launch Game\" />\n                </Link>\n              </div>\n            </Container>\n          </div >\n        )\n      }\n      return (\n        // player view\n        <div>\n          <div className=\"container\">\n            <div className=\"top-message\">{topMessage}</div>\n          </div>\n        </div >\n      )\n    }\n    return (\n      <div>\n        <Redirect to='/' />\n      </div>\n    )\n  }\n}\n\n// wrapping the Lobby component in withRouter allows the history push up above for forced redirect\nexport default withRouter(Lobby);","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\nimport \"./Responses.css\"\n\nclass Responses extends React.Component {\n  state = {\n    choiceMade: false,\n    choice: undefined,\n    timer: 15,\n  }\n\n  componentDidMount() {\n    console.log(\"Responses mounted, starting timer\")\n    let time = this.state.timer;\n\n    let tMinus = setInterval(() => {\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n      }else{\n        // if the timer runs out, choose the default option\n        clearInterval(tMinus);\n        this.madeChoice(0)\n      }\n    }, 1000)\n  }\n\n  madeChoice(num) {\n    // player's answer\n    if (!this.state.choiceMade) {\n      this.setState({ choiceMade: true, choice: num })\n      this.props.choiceCB(num);\n      console.log(`you chose response #${num}`);\n      document.getElementById(num).setAttribute(\"class\", \"selectedAnswer\")\n      this.props.socket.emit(\"choiceMade\", this.props.gameCode);\n    }\n  }\n\n  render() {\n    let ansArr = [];\n    this.props.answers.forEach((elem, i) => {\n      ansArr.push(\n        <div className=\"answer\" id={i} key={i} onClick={() => { this.madeChoice(i) }}>\n          <p>{elem.response}</p>\n        </div>\n      )\n    });\n\n    if(this.state.madeChoice){\n      let outcome = this.calcOutcome();\n      return({outcome})\n    }\n    return (\n      <div>\n        <div>{ansArr}</div>\n        <div>Timer: {this.state.timer}</div>\n      </div>\n    )\n  }\n}\n\nexport default Responses","import React from \"react\";\n\nfunction Outcomes(props) {\n\n  let gameObj = props.gameObj;\n  let avatar = props.avatar;\n  let qNum = props.qNum;\n  let choice = props.choice;\n  let outcome = gameObj.questions[qNum].responses[choice].outcomes;\n\n  return (\n    <div className=\"container\">\n      <h1>Here's what happened:</h1>\n      <div>{outcome[0].text}</div>\n      <div>{outcome[0].trait}: {outcome[0].upDown}</div>\n      <div>{outcome[1].trait}: {outcome[1].upDown}</div>\n    </div>\n  )\n}\n\nexport default Outcomes;","import React from 'react'\nimport Responses from \"../Responses\"\nimport Outcomes from \"../Outcomes\"\n// import { Redirect } from \"react-router-dom\"\n\nclass Game extends React.Component {\n\n  state = {\n    gameState: \"prestart\",\n    currentQuestion: 0,\n    allowTimer: true,\n    timer: 10,\n    avatar: undefined,\n    choice: undefined\n  }\n\n  componentDidMount() {\n    // If this is the host, tell all the player clients to start\n    if (this.props.state.host) {\n      this.props.socket.emit(\"startPlayers\", this.props.state.gameCode, this.props.state.gameObj)\n    }\n    else {\n      // if not the host, select an avatar and start game\n      let rand = Math.floor(Math.random() * this.props.state.gameObj.avatars.length)\n      this.setState({\n        avatar: this.props.state.gameObj.avatars[rand],\n        gameState: \"intro\"\n      })\n    }\n\n    this.countdown(10, \"QandA\");\n\n    // listen for trigger to show outcome\n    this.props.socket.on(\"showResult\", () => {\n      console.log(\"setting gameState to outcomes\");\n\n      if (this.state.currentQuestion < this.props.state.gameObj.questions.length - 1) {\n        this.countdown(3, \"QandA\");\n        this.setState({ gameState: \"outcomes\" })\n      }\n      else // if we've run out of questions, end the game\n        this.setState({ gameState: \"end\" })\n    })\n  }\n\n  countdown = (num, nextGameState) => {\n    // console.log(`starting countdown: ${num} ${currentGameState} ${nextGameState}`)\n    this.setState({ timer: num })\n\n    let tMinus = setInterval(() => {\n      let time = this.state.timer;\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n        return\n      }\n      // console.log(`this.state.gameState: ${this.state.gameState}, currentGameState: ${currentGameState}`)\n      // if (this.state.gameState === currentGameState) {\n      else {\n        // when the timer runs out, move to the first question\n        console.log(`setting gamestate as ${nextGameState}`)\n        // increment question when we move on to a new QandA state\n        if (this.state.gameState === \"outcomes\" && nextGameState === \"QandA\")\n          this.setState({ currentQuestion: this.state.currentQuestion + 1 })\n        this.setState({\n          gameState: nextGameState,\n          allowTimer: true\n        })\n        clearInterval(tMinus)\n      }\n    }, 1000)\n\n\n  }\n\n  choiceCB = (num) => {\n    this.setState({ choice: num })\n    console.log(`setting choice ${num} in Game component`)\n  }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // listen for game start message, relevant for host\n    socket.on(\"gameStart\", () => {\n      this.setState({ gameState: \"intro\" })\n    })\n\n    if (this.props.state.gameObj) {\n      let gameObj = this.props.state.gameObj;\n\n      // **************************************\n      // ************ HOST VIEWS **************\n      // **************************************\n      if (this.props.state.host) {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            return (\n              <div>\n                <div>{gameObj.name}</div>\n                <div>Game starts in: {this.state.timer} seconds</div>\n              </div>\n            )\n\n          case \"QandA\":\n            return (\n              <div>Question: {gameObj.questions[this.state.currentQuestion].Q}</div>\n            )\n\n          case \"outcomes\":\n            // // start timer for next question\n            // if (this.state.timer < 1 && this.allowTimer) {\n            //   this.setState({ allowTimer: false });\n            //   console.log(`current question: ${this.state.currentQuestion}, q arr length: ${gameObj.questions.length}`)\n            //   if (this.state.currentQuestion < gameObj.questions.length - 2)\n            //     this.countdown(10, \"QandA\");\n            //   else\n            //     this.setState({ gameState: \"end\" })\n            // }\n            return (\n              <div className=\"container\">\n                <div>Well, let's see what that did...</div>\n                <div>Next question in {this.state.timer}</div>\n              </div>\n            )\n\n          case \"end\":\n            return (<div>that's all folks</div>)\n        }\n      }\n      // **************************************\n      // *********** PLAYER VIEWS *************\n      // **************************************\n      else {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            // if we're still waiting for the avatar to load\n            if (!this.state.avatar) return (<div>avatar loading</div>)\n            else {\n              // Avatar intro view\n              let traits = [];\n              for (let i = 1; i < 6; i++) {\n                traits.push(<div>{gameObj.traits[\"trait\" + i] + \": \" + this.state.avatar[\"trait\" + i]}</div>)\n              }\n              return (\n                <div>\n                  <div>{this.state.avatar.name}</div>\n                  <div>{traits}</div>\n                </div>\n              )\n            }\n\n          case \"QandA\":\n            return (\n              // show responses for current question\n              <Responses choiceCB={this.choiceCB} timer={this.state.timer} answers={gameObj.questions[this.state.currentQuestion].responses} socket={this.props.socket} gameCode={this.props.state.gameCode} />\n            )\n\n          case \"outcomes\":\n            return (\n              <Outcomes choice={this.state.choice} gameObj={gameObj} avatar={this.state.avatar} qNum={this.state.currentQuestion} />\n            )\n\n          case \"end\":\n            return (<div>that's all folks</div>)\n\n        }\n      }\n    }\n\n\n\n    // default view\n    return (\n      <div>\n        LOADING GAME ^_^\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport LandingPage from '../LandingPage'\nimport Lobby from \"../Lobby\"\nimport Game from \"../Game\"\n\nclass PrimaryLayout extends React.Component {\n\n  state = {\n  }\n  render() {\n\n    const setGame = (game) => {\n      console.log(`setting game as ${game.name}`)\n      this.setState({gameObj: game})\n    }\n\n    // allows us to pass props (logged in status and username) into the landing page when using a Route. \n    const landingPage = () => {\n      return (<LandingPage state={this.props.state} updateState={this.props.updateState} setGame={setGame} />)\n    }\n\n    const lobby = () => {\n      return <Lobby state={this.props.state} socket={this.props.socket} updateState={this.props.updateState} />\n\n    }\n\n    const game = () => {\n      return <Game state={this.props.state} socket={this.props.socket} />\n    }\n\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/game\" render={game} />\n\n          <Route path=\"/lobby\" render={lobby} />\n\n          {/* Uses render to load the landing page via function so we can pass in props */}\n          <Route path=\"/\" exact render={landingPage} />\n\n          {/* Catch all, redirects to landing page */}\n          <Redirect to=\"/\" />\n\n        </Switch>\n      </div>\n    )\n  }\n}\nexport default PrimaryLayout;","import React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css';\nimport PrimaryLayout from '../src/components/PrimaryLayout'\nimport io from \"socket.io-client\";\n\nlet socket = io('https://real-life-api.herokuapp.com/');\n\nclass App extends Component {\n\n  state = {\n    gameState: \"start\",\n    loggedIn: false,\n    userName: \"login\",\n    gameCode: \"\",\n    gameObj: undefined,\n    host: false\n  }\n\n  updateState = (vals) => {\n    // console.log(`updating top state`)\n    this.setState(vals);\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename = {process.env.PUBLIC_URL}>\n        <PrimaryLayout\n          state={this.state}\n          updateState={this.updateState}\n          socket={socket}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}