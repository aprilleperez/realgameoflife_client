{"version":3,"sources":["components/Button/index.js","utils/API.js","components/Modal/index.js","components/Nav/index.js","components/InputField/index.js","components/LandingPage/index.js","components/Lobby/index.js","components/Responses/index.js","components/Outcomes/index.js","components/Game/index.js","components/PrimaryLayout/index.js","App.js","serviceWorker.js","index.js"],"names":["Button","props","className","buttonType","react_default","a","createElement","text","API","getGames","q","axios","get","params","registerUser","newUser","post","logInUser","user","logOutUser","NewModal","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","target","name","value","setState","defineProperty","handleFormSubmit","preventDefault","state","firstName","lastName","password","orgName","saveUser","passsword","catch","err","console","log","_this$state","email","then","res","_this$state2","loggedUser","handleShow","bind","assertThisInitialized","handleClose","show","Fragment","es_Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","onChange","placeholder","Accordion","Card","Toggle","as","eventKey","Collapse","Row","Col","Footer","React","Component","Nav","userName","components_Modal","nextProps","prevState","InputField","handleChange","handleSubmit","updateState","gameCode","onSubmit","react_router_dom","to","LandingPage","components_Nav","loggedIn","components_Button","components_InputField","Lobby","host","players","getDefaultGame","_callee","results","regenerator_default","wrap","_context","prev","next","sent","gameObj","data","stop","gameLaunchHandler","_this2","socket","on","asyncToGenerator","mark","_callee2","_context2","history","push","emit","count","topMessage","playerCountMessage","playerIcons","s","concat","i","src","key","alt","jumbo","Container","react_router","withRouter","Responses","choiceMade","choice","undefined","timer","time","tMinus","setInterval","clearInterval","madeChoice","num","choiceCB","document","getElementById","setAttribute","_this3","ansArr","answers","forEach","elem","id","response","outcome","calcOutcome","Outcomes","qNum","avatar","questions","responses","outcomes","trait","upDown","Game","gameState","currentQuestion","allowTimer","countdown","nextGameState","rand","Math","floor","random","avatars","length","Q","traits","components_Responses","components_Outcomes","PrimaryLayout","setGame","game","path","render","components_Game","components_Lobby","exact","components_LandingPage","process","PORT","io","App","vals","basename","components_PrimaryLayout","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de2f948d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./button.css\";\n\n\nfunction Button(props) {\n\n  let className = \"button \" + props.buttonType;\n\n  return (\n      <button className={className}>{props.text}</button>\n  )\n}\n\nexport default Button;","//import axios\n//====================\nimport axios from \"axios\";\n\nexport default {\n    getGames: function(q) {\n        return axios.get('https://real-life-api.herokuapp.com/api/games/ + INSERT GAME NAME!', { params: { q: 'title:' + q} });\n    },\n    //creates new user\n    registerUser: function(newUser){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser);\n    },\n    //logs in user\n    logInUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/api/admin/login/',  user)\n    },\n    //logs out user\n    logOutUser: function(user){\n        return axios.post('https://real-life-api.herokuapp.com/api/admin/logout/', user)\n    }\n}","import React  from 'react';\nimport {Button, Modal, Form, Accordion, Card, Col, Row} from 'react-bootstrap';\nimport axios from 'axios';\nimport API from '../../utils/API';\n\n\nclass NewModal extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleShow = this.handleShow.bind(this);\n      this.handleClose = this.handleClose.bind(this);\n  \n      this.state = {\n        show: false,\n      };\n    }\n\n    handleInputChange = event => {\n      const { name, value } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    handleFormSubmit = event => {\n      event.preventDefault();\n      if (this.state.firstName && this.state.lastName && this.name.password && this.name.orgName) {\n        API.saveUser({\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          password: this.state.passsword,\n          orgName: this.state.orgName\n        })\n          .catch(err => console.log(err));\n      }\n    };\n  \n    registerUser = (event) => {\n      event.preventDefault();\n      const { firstName, lastName, email, password, orgName } = this.state;\n      \n      const newUser = {\n        firstName,\n        lastName,\n        email,\n        password,\n        orgName\n      }\n      axios.post('https://real-life-api.herokuapp.com/api/admin/signup/', newUser)\n        .then(res => {\n          console.log(\"NEW USER CREATED\")\n          console.log(res)\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n\n    logInUser = (event) => {\n      event.preventDefault();\n      const { email, password } = this.state;\n\n      const loggedUser={\n        email, password\n      }\n\n      axios.post('https://real-life-api.herokuapp.com/api/admin/login', loggedUser)\n        .then(res => {\n          console.log(\"YOU'RE LOGGED IN!\")\n          console.log(res)\n        })\n        .catch(err => {\n          console.log(\"I'M BROKEN! FIX ME!\")\n          console.log(err);\n        })\n    }\n\n    handleClose() {\n      this.setState({ show: false });\n    }\n  \n    handleShow() {\n      this.setState({ show: true });\n    }\n  \n    render() {\n      return (\n        <>\n          <Button variant=\"primary\" onClick={this.handleShow}>\n            Login\n          </Button>\n  \n          <Modal show={this.state.show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Sign In!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Form>\n                <Form.Group controlId=\"formGroupEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" onChange={this.handleInputChange} name=\"email\" placeholder=\"johndoe@test.com\" />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\"  onChange={this.handleInputChange} name=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                Want to create a game? Be an admin and register down below!\n            </Form>\n            <br></br>\n            <Accordion>\n            <Card>\n                <Card.Header>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    SignUp\n                </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                <Form>\n            <Form.Row>\n                <Row>\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control type=\"firstName\" value={this.state.firstName} name = 'firstName' onChange={this.handleInputChange} placeholder=\"John\" />\n                    </Form.Group>\n                </Row>\n                <Row>\n                    <Form.Group as={Col} controlId=\"formGridLastName\">\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control type=\"lastName\" value={this.state.lastName} name = 'lastName' onChange={this.handleInputChange} placeholder=\"Doe\" />\n                    </Form.Group>\n                </Row>\n                <Row>\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" value={this.state.email} name = 'email' onChange={this.handleInputChange} placeholder=\"Enter email\" />\n                    </Form.Group>\n                </Row>\n                <Row>\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" value={this.state.password} name = 'password' onChange={this.handleInputChange} placeholder=\"Password\" />\n                    </Form.Group>\n                </Row>\n                <Row>\n                    <Form.Group as={Col} controlId=\"formGridOrg\">\n                    <Form.Label>Organization Name</Form.Label>\n                    <Form.Control type=\"orgName\" value={this.state.orgName} name = 'orgName' onChange={this.handleInputChange} placeholder=\"nunyaINC\" />\n                    </Form.Group>\n                </Row>\n            </Form.Row>\n            <Button onClick={this.registerUser} variant=\"primary\" type=\"submit\">\n                Register\n            </Button>\n            </Form>\n                </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n       {/* This is where the sign up form pops up  */}\n        </Accordion>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={this.handleClose}>\n                Close\n              </Button>              \n              <Button onClick={this.logInUser} variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </>        \n      );\n    }\n  }\n  \n \n\n  export default NewModal;","import React from \"react\";\nimport Modal from \"../Modal\"\nimport \"./nav.css\"\n\nclass Nav extends React.Component {\n\n  state = {\n    name: this.props.userName\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.userName !== prevState.name) {\n      return { name: nextProps.userName }\n    }\n    else\n      return null;\n  }\n\n  render() {\n    return (\n      <div className=\"nav-bar text-right\">\n        <div className=\"title\">\n          Game of Real Life\n        </div>\n        <Modal/>\n      </div>\n    )\n  }\n}\nexport default Nav;","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\n// import Button from \"../Button\"\n\n\nclass InputField extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value}, this.props.updateState({gameCode: event.target.value})\n    );\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Game Code:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <Link to=\"/lobby\"><input type=\"submit\" value=\"Join Game\" /></Link>\n      </form>\n\n    );\n  }\n}\n\nexport default InputField;","import React from \"react\";\nimport Button from \"../Button\"\nimport Nav from \"../Nav\"\nimport InputField from \"../InputField\"\nimport { Link } from 'react-router-dom'\n\nimport \"./landingPage.css\"\n\nconst LandingPage = (props) => {\n\n  return (\n    <div>\n      <Nav loggedIn={props.state.loggedIn} userName={props.state.userName} />\n      <div className=\"jumbotron m-5\">\n        <div className=\"row\">\n          <Link to=\"/\" className=\"ml-3\"><Button text=\"Launch a Game\" buttonType=\"green\" /></Link>\n          <Link to=\"/\" className=\"ml-3\"><Button text=\"Create/Edit Games\" buttonType=\"green\" /></Link>\n        </div>\n        <div className=\"row mt-5\">\n        <h1 className=\"ml-3 align-bottom\">Enter Game Code:</h1>\n        \n        </div>\n        <InputField updateState={props.updateState}/>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage;","import React from \"react\";\nimport Nav from \"../Nav\"\nimport Button from \"../Button\"\nimport { Redirect, Link, withRouter } from \"react-router-dom\"\nimport { Container } from \"react-bootstrap\"\nimport \"./lobby.css\"\nimport axios from 'axios';\n\nclass Lobby extends React.Component {\n\n  state = {\n    host: false,\n    players: 0\n  }\n\n  getDefaultGame = async () => {\n    let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n    // console.log(results)\n    this.props.updateState({ gameObj: results.data })\n  }\n\n  gameLaunchHandler = () => {\n    console.log(\"getting game\");\n    this.getDefaultGame();\n  }\n\n  // Maybe use this later to clean up the code a little\n  componentDidMount() { }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // console.log(`socket ID is ${socket.id}`);\n\n    // listen for game start message\n    socket.on(\"gameStart\", async () => {\n      console.log(\"heard gameStart\")\n      let results = await axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n\n      //hardcoding in the game, needs update\n      this.props.updateState({ gameObj: results.data[7] })\n      console.log(results.data[7])\n\n      this.props.history.push('/game');\n    })\n\n    if (this.props.state.gameCode) {\n      if (!this.state.host)\n        socket.emit(\"gameNum\", this.props.state.gameCode);\n\n\n      // small bug, triggers like 60 times, doesn't break anything though\n      socket.on(\"playerCount\", (count) => {\n        console.log(\"Players:\", count);\n        if (count !== this.state.players)\n          this.setState({ players: count });\n      })\n\n      // if we receive the \"You're the host!\"\" message\n      socket.on(\"host\", () => {\n        console.log(\"host message...\");\n        if (!this.state.host) {\n          this.setState({ host: true });\n          // also update top level state \n          this.props.updateState({ host: true })\n        }\n      })\n\n      let topMessage = \"\";\n\n      this.state.host ?\n        topMessage = (\"To join this game, go to *URL* and enter the code \" + this.props.state.gameCode)\n        : topMessage = \"Waiting for game to start\"\n\n      // construct players ready string and icons\n      let playerCountMessage = \"\";\n      let playerIcons = [];\n      let s = \"s\";\n      if (this.state.players === 1)\n        s = \"\";\n      if (this.state.host) {\n        playerCountMessage = `${this.state.players} player${s} ready`;\n        for (let i = 0; i < this.state.players; i++) {\n          playerIcons.push(<img src=\"smiley.png\" key={i} alt=\"player\"></img>)\n        }\n\n        let jumbo = \"\";\n        jumbo =\n          <div className=\"jumbotron m-5\">\n            <p>{playerCountMessage}</p>\n            <div className=\"row players\">\n              {playerIcons}\n            </div>\n          </div>\n\n        return (\n          // host view\n          <div>\n            <Nav loggedIn={this.props.state.loggedIn} userName={this.props.state.userName} />\n            <div className=\"container-fluid\">\n              <div className=\"top-message\">{topMessage}</div>\n              {jumbo}\n            </div>\n            <Container>\n              <div className=\"\">\n                <Link to=\"/game\" onClick={this.gameLaunchHandler}>\n                  <Button buttonType=\"green\" text=\"Launch Game\" />\n                </Link>\n              </div>\n            </Container>\n          </div >\n        )\n      }\n      return (\n        // player view\n        <div>\n          <div className=\"container\">\n            <div className=\"top-message\">{topMessage}</div>\n          </div>\n        </div >\n      )\n    }\n    return (\n      <div>\n        <Redirect to='/' />\n      </div>\n    )\n  }\n}\n\n// wrapping the Lobby component in withRouter allows the history push up above for forced redirect\nexport default withRouter(Lobby);","import React from \"react\";\nimport { withRouter } from 'react-router-dom'\nimport \"./Responses.css\"\n\nclass Responses extends React.Component {\n  state = {\n    choiceMade: false,\n    choice: undefined,\n    timer: 15,\n  }\n\n  componentDidMount() {\n    console.log(\"Responses mounted, starting timer\")\n    let time = this.state.timer;\n\n    let tMinus = setInterval(() => {\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n      }else{\n        // if the timer runs out, choose the default option\n        clearInterval(tMinus);\n        this.madeChoice(0)\n      }\n    }, 1000)\n  }\n\n  madeChoice(num) {\n    // player's answer\n    if (!this.state.choiceMade) {\n      this.setState({ choiceMade: true, choice: num })\n      this.props.choiceCB(num);\n      console.log(`you chose response #${num}`);\n      document.getElementById(num).setAttribute(\"class\", \"selectedAnswer\")\n      this.props.socket.emit(\"choiceMade\", this.props.gameCode);\n    }\n  }\n\n  render() {\n    let ansArr = [];\n    this.props.answers.forEach((elem, i) => {\n      ansArr.push(\n        <div className=\"answer\" id={i} key={i} onClick={() => { this.madeChoice(i) }}>\n          <p>{elem.response}</p>\n        </div>\n      )\n    });\n\n    if(this.state.madeChoice){\n      let outcome = this.calcOutcome();\n      return({outcome})\n    }\n    return (\n      <div>\n        <div>{ansArr}</div>\n        <div>Timer: {this.state.timer}</div>\n      </div>\n    )\n  }\n}\n\nexport default Responses","import React from \"react\";\n\nfunction Outcomes(props) {\n\n  let gameObj = props.gameObj;\n  let avatar = props.avatar;\n  let qNum = props.qNum;\n  let choice = props.choice;\n  let outcome = gameObj.questions[qNum].responses[choice].outcomes;\n\n  return (\n    <div className=\"container\">\n      <h1>Here's what happened:</h1>\n      <div>{outcome[0].text}</div>\n      <div>{outcome[0].trait}: {outcome[0].upDown}</div>\n      <div>{outcome[1].trait}: {outcome[1].upDown}</div>\n    </div>\n  )\n}\n\nexport default Outcomes;","import React from 'react'\nimport Responses from \"../Responses\"\nimport Outcomes from \"../Outcomes\"\n// import { Redirect } from \"react-router-dom\"\n\nclass Game extends React.Component {\n\n  state = {\n    gameState: \"prestart\",\n    currentQuestion: 0,\n    allowTimer: true,\n    timer: 10,\n    avatar: undefined,\n    choice: undefined\n  }\n\n  componentDidMount() {\n    // If this is the host, tell all the player clients to start\n    if (this.props.state.host) {\n      this.props.socket.emit(\"startPlayers\", this.props.state.gameCode, this.props.state.gameObj)\n    }\n    else {\n      // if not the host, select an avatar and start game\n      let rand = Math.floor(Math.random() * this.props.state.gameObj.avatars.length)\n      this.setState({\n        avatar: this.props.state.gameObj.avatars[rand],\n        gameState: \"intro\"\n      })\n    }\n\n    this.countdown(10, \"QandA\");\n\n    // listen for trigger to show outcome\n    this.props.socket.on(\"showResult\", () => {\n      console.log(\"setting gameState to outcomes\");\n\n      if (this.state.currentQuestion < this.props.state.gameObj.questions.length - 1) {\n        this.countdown(3, \"QandA\");\n        this.setState({ gameState: \"outcomes\" })\n      }\n      else // if we've run out of questions, end the game\n        this.setState({ gameState: \"end\" })\n    })\n  }\n\n  countdown = (num, nextGameState) => {\n    // console.log(`starting countdown: ${num} ${currentGameState} ${nextGameState}`)\n    this.setState({ timer: num })\n\n    let tMinus = setInterval(() => {\n      let time = this.state.timer;\n      if (time > 0) {\n        time--;\n        this.setState({ timer: time })\n        return\n      }\n      // console.log(`this.state.gameState: ${this.state.gameState}, currentGameState: ${currentGameState}`)\n      // if (this.state.gameState === currentGameState) {\n      else {\n        // when the timer runs out, move to the first question\n        console.log(`setting gamestate as ${nextGameState}`)\n        // increment question when we move on to a new QandA state\n        if (this.state.gameState === \"outcomes\" && nextGameState === \"QandA\")\n          this.setState({ currentQuestion: this.state.currentQuestion + 1 })\n        this.setState({\n          gameState: nextGameState,\n          allowTimer: true\n        })\n        clearInterval(tMinus)\n      }\n    }, 1000)\n\n\n  }\n\n  choiceCB = (num) => {\n    this.setState({ choice: num })\n    console.log(`setting choice ${num} in Game component`)\n  }\n\n  render() {\n\n    let socket = this.props.socket;\n\n    // listen for game start message, relevant for host\n    socket.on(\"gameStart\", () => {\n      this.setState({ gameState: \"intro\" })\n    })\n\n    if (this.props.state.gameObj) {\n      let gameObj = this.props.state.gameObj;\n\n      // **************************************\n      // ************ HOST VIEWS **************\n      // **************************************\n      if (this.props.state.host) {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            return (\n              <div>\n                <div>{gameObj.name}</div>\n                <div>Game starts in: {this.state.timer} seconds</div>\n              </div>\n            )\n\n          case \"QandA\":\n            return (\n              <div>Question: {gameObj.questions[this.state.currentQuestion].Q}</div>\n            )\n\n          case \"outcomes\":\n            // // start timer for next question\n            // if (this.state.timer < 1 && this.allowTimer) {\n            //   this.setState({ allowTimer: false });\n            //   console.log(`current question: ${this.state.currentQuestion}, q arr length: ${gameObj.questions.length}`)\n            //   if (this.state.currentQuestion < gameObj.questions.length - 2)\n            //     this.countdown(10, \"QandA\");\n            //   else\n            //     this.setState({ gameState: \"end\" })\n            // }\n            return (\n              <div className=\"container\">\n                <div>Well, let's see what that did...</div>\n                <div>Next question in {this.state.timer}</div>\n              </div>\n            )\n\n          case \"end\":\n            return (<div>that's all folks</div>)\n        }\n      }\n      // **************************************\n      // *********** PLAYER VIEWS *************\n      // **************************************\n      else {\n        switch (this.state.gameState) {\n\n          case \"intro\":\n            // if we're still waiting for the avatar to load\n            if (!this.state.avatar) return (<div>avatar loading</div>)\n            else {\n              // Avatar intro view\n              let traits = [];\n              for (let i = 1; i < 6; i++) {\n                traits.push(<div>{gameObj.traits[\"trait\" + i] + \": \" + this.state.avatar[\"trait\" + i]}</div>)\n              }\n              return (\n                <div>\n                  <div>{this.state.avatar.name}</div>\n                  <div>{traits}</div>\n                </div>\n              )\n            }\n\n          case \"QandA\":\n            return (\n              // show responses for current question\n              <Responses choiceCB={this.choiceCB} timer={this.state.timer} answers={gameObj.questions[this.state.currentQuestion].responses} socket={this.props.socket} gameCode={this.props.state.gameCode} />\n            )\n\n          case \"outcomes\":\n            return (\n              <Outcomes choice={this.state.choice} gameObj={gameObj} avatar={this.state.avatar} qNum={this.state.currentQuestion} />\n            )\n\n          case \"end\":\n            return (<div>that's all folks</div>)\n\n        }\n      }\n    }\n\n\n\n    // default view\n    return (\n      <div>\n        LOADING GAME ^_^\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React from \"react\";\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport LandingPage from '../LandingPage'\nimport Lobby from \"../Lobby\"\nimport Game from \"../Game\"\n\nclass PrimaryLayout extends React.Component {\n\n  state = {\n  }\n  render() {\n\n    const setGame = (game) => {\n      console.log(`setting game as ${game.name}`)\n      this.setState({gameObj: game})\n    }\n\n    // allows us to pass props (logged in status and username) into the landing page when using a Route. \n    const landingPage = () => {\n      return (<LandingPage state={this.props.state} updateState={this.props.updateState} setGame={setGame} />)\n    }\n\n    const lobby = () => {\n      return <Lobby state={this.props.state} socket={this.props.socket} updateState={this.props.updateState} />\n\n    }\n\n    const game = () => {\n      return <Game state={this.props.state} socket={this.props.socket} />\n    }\n\n    return (\n      <div>\n        <Switch>\n          <Route path=\"/game\" render={game} />\n\n          <Route path=\"/lobby\" render={lobby} />\n\n          {/* Uses render to load the landing page via function so we can pass in props */}\n          <Route path=\"/\" exact render={landingPage} />\n\n          {/* Catch all, redirects to landing page */}\n          <Redirect to=\"/\" />\n\n        </Switch>\n      </div>\n    )\n  }\n}\nexport default PrimaryLayout;","import React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport './App.css';\nimport PrimaryLayout from '../src/components/PrimaryLayout'\nimport io from \"socket.io-client\";\n\nlet socket = \"\";\nprocess.env.PORT ? socket = io('https://real-life-api.herokuapp.com/') \n: socket = io(\"localhost:3001\");\n\nclass App extends Component {\n\n  state = {\n    gameState: \"start\",\n    loggedIn: false,\n    userName: \"login\",\n    gameCode: \"\",\n    gameObj: undefined,\n    host: false\n  }\n\n  updateState = (vals) => {\n    // console.log(`updating top state`)\n    this.setState(vals);\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename = {process.env.PUBLIC_URL}>\n        <PrimaryLayout\n          state={this.state}\n          updateState={this.updateState}\n          socket={socket}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}